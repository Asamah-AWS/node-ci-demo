name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint .

      - name: Run tests with coverage
        run: npm test -- --coverage --coverageProvider=v8
  staging:
    needs: test
    runs-on: ubuntu-latenst
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to Staging
        run: echo "Deploying to dtaging env."
        #Add your staging deploy commands here 
  
  canary: 
    needs: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3*
      - name: Deploy Canary Release
        run: echo "Deploying canary release..."
        # Add your canary deply commands here

  deploy:
    runs-on: ubuntu-latest
    needs: canary
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to production
        run: echo "Deploying to Production env..."
        # Add your production deploy commands here
