name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint .

      - name: Run tests with coverage
        run: npm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  staging:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Staging
        run: echo "Simulating deployment to staging environment..."

  canary:
    needs: staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Deploy Canary Release
        run: echo "Simulating canary deployment..."

      - name: Run Health Check on Canary
        run: |
          echo "Running health checks..."
          # Simulate health check passing (exit 0 means success)
          exit 0

  deploy:
    needs: canary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Production
        run: echo "Deploying to production environment..."

      - name: Run Health Check on Production
        run: |
          echo "Running production health checks..."
          # Simulate health check passing (change to exit 1 to simulate failure)
          exit 0

  bake-time:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Bake Time - Wait for 5 minutes
        run: sleep 300  # 300 seconds = 5 minutes

  rollback:
    needs: deploy
    if: failure()  # runs only if deploy job fails
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Rollback Deployment
        run: echo "Deployment failed, rolling back changes..."
